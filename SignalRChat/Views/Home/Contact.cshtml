@{
    ViewBag.Title = "Contact";
    Layout = "~/Views/Shared/_DominoGameLayout.cshtml";
}
<h2>@ViewBag.Title.</h2>
<h3>Device properties</h3>

@section scripts{
    <script src="~/Scripts/knockout-3.2.0.js"></script>
    <script>
        $(function () {
            function ViewModel()
            {
                var self = this;

                self.documentWidth = ko.observable();
                self.documentHeight = ko.observable();

                self.innerWidth = ko.observable();
                self.innerHeight = ko.observable();

                self.outerWidth = ko.observable();
                self.outerHeight = ko.observable();

                self.orientation = ko.observable();
            }


            var viewModel = new ViewModel();
            ko.applyBindings(viewModel);


            //set properties
            viewModel.documentWidth($(document).width());
            viewModel.documentHeight($(document).height());

            viewModel.innerWidth($(document).innerWidth());
            viewModel.innerHeight($(document).innerHeight());

            viewModel.outerWidth($(document).outerWidth());
            viewModel.outerHeight($(document).outerHeight());

            viewModel.orientation(window.orientation);

            viewModel.orientation((viewModel.documentHeight() > viewModel.documentWidth()) ? "portrait" : "landscape");



            //bind change events
            $(window).bind("resize", function(e)
            {
                viewModel.documentWidth($(document).width());
                viewModel.documentHeight($(document).height());

                viewModel.innerWidth($(document).innerWidth());
                viewModel.innerHeight($(document).innerHeight());

                viewModel.outerWidth($(document).outerWidth());
                viewModel.outerHeight($(document).outerHeight());

                viewModel.orientation((viewModel.documentHeight() > viewModel.documentWidth()) ? "portrait" : "landscape");
            })


            $(window).bind('orientationchange', function (e) {

                switch (window.orientation) {

                    case 0:
                        viewModel.orientation("Landscape orientation with the screen turned clockwise.");
                        break;

                    case 90:
                        viewModel.orientation("landscape mode screen turned to the left");
                        break;

                    case -90:
                        viewModel.orientation("landscape mode screen turned to the right");
                        break;

                    case 180:
                        viewModel.orientation("Portrait orientation with the screen turned upside down. This value is currently not supported on iPhone.");
                        break;
                }
            });
        });

        
    </script>
}


<div>
    <div>
        Document Width <span data-bind="text: documentWidth"></span> px
    </div>

    <div>
        Document Height <span data-bind="text: documentHeight"></span> px
    </div>

    <div>
        Document Inner Width <span data-bind="text: innerWidth"></span> px
    </div>

    <div>
        Document Inner Height <span data-bind="text: innerHeight"></span> px
    </div>

    <div>
        Document Outer Width <span data-bind="text: outerWidth"></span> px
    </div>

    <div>
        Document Outer Height <span data-bind="text: outerHeight"></span> px
    </div>

    <div>
        Orientation <span data-bind="text: orientation"></span> 
    </div>
</div>